AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  LLM Response Evaluator API
  
  SAM Template for the LLM Response Evaluator project with asynchronous processing

Globals:
  Function:
    Timeout: 30
    MemorySize: 512
    Tracing: Active
    Environment:
      Variables:
        AWS_REGION: !Ref AWS::Region
        LOG_LEVEL: INFO
  Api:
    TracingEnabled: true
    Cors:
      AllowMethods: "'*'"
      AllowHeaders: "'*'"
      AllowOrigin: "'*'"

Parameters:
  Stage:
    Type: String
    Default: dev
    Description: Deployment stage (dev, test, prod)
    AllowedValues:
      - dev
      - test
      - prod
  BedrockModelAccess:
    Type: String
    Default: "true"
    Description: Whether to enable access to Bedrock models
    AllowedValues:
      - "true"
      - "false"

Resources:
  # API Lambda Function
  ApiFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./
      Handler: app.api.handler
      Runtime: python3.12
      Architectures:
        - x86_64
      Description: API Lambda for LLM Response Evaluator
      Layers:
        - !Ref DependenciesLayer
      Environment:
        Variables:
          EVALUATION_QUEUE_URL: !Ref EvaluationQueue
          JOBS_TABLE_NAME: !Ref JobsTable
          HISTORY_TABLE_NAME: !Ref HistoryTable
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /{proxy+}
            Method: ANY
            RestApiId: !Ref ApiGateway
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref JobsTable
        - DynamoDBCrudPolicy:
            TableName: !Ref HistoryTable
        - SQSSendMessagePolicy:
            QueueName: !GetAtt EvaluationQueue.QueueName
        - Statement:
            - Effect: Allow
              Action:
                - bedrock:ListFoundationModels
                - bedrock:GetFoundationModel
              Resource: "*"

  # Processor Lambda Function
  ProcessorFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./
      Handler: app.processor.lambda_handler
      Runtime: python3.12
      Architectures:
        - x86_64
      Description: Processor Lambda for LLM Response Evaluator
      Layers:
        - !Ref DependenciesLayer
      Timeout: 900  # 15 minutes
      MemorySize: 1024
      Environment:
        Variables:
          EVALUATION_QUEUE_URL: !Ref EvaluationQueue
          JOBS_TABLE_NAME: !Ref JobsTable
          HISTORY_TABLE_NAME: !Ref HistoryTable
          MAX_PROCESSING_TIME: "800"  # 13.3 minutes (leaving buffer before Lambda times out)
      Events:
        SQSEvent:
          Type: SQS
          Properties:
            Queue: !GetAtt EvaluationQueue.Arn
            BatchSize: 1  # Process one message at a time
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref JobsTable
        - DynamoDBCrudPolicy:
            TableName: !Ref HistoryTable
        - SQSPollerPolicy:
            QueueName: !GetAtt EvaluationQueue.QueueName
        - Statement:
            - Effect: Allow
              Action:
                - bedrock:ListFoundationModels
                - bedrock:GetFoundationModel
                - bedrock:InvokeModel
                - bedrock-runtime:InvokeModel
                - bedrock-runtime:InvokeModelWithResponseStream
              Resource: "*"

  # REST API Gateway
  ApiGateway:
    Type: AWS::Serverless::Api
    Properties:
      StageName: !Ref Stage
      Description: API Gateway for LLM Response Evaluator
      EndpointConfiguration: REGIONAL
      TracingEnabled: true
      MethodSettings:
        - ResourcePath: "/*"
          HttpMethod: "*"
          MetricsEnabled: true
          DataTraceEnabled: true
          LoggingLevel: INFO

  # SQS Queue for Async Processing
  EvaluationQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub "${AWS::StackName}-evaluation-queue-${Stage}"
      DelaySeconds: 0
      VisibilityTimeout: 900  # 15 minutes
      MessageRetentionPeriod: 1209600  # 14 days
      RedrivePolicy:
        deadLetterTargetArn: !GetAtt DeadLetterQueue.Arn
        maxReceiveCount: 3  # Move to DLQ after 3 failed attempts

  # Dead Letter Queue for Failed Jobs
  DeadLetterQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub "${AWS::StackName}-dlq-${Stage}"
      MessageRetentionPeriod: 1209600  # 14 days

  # DynamoDB Table for Job Tracking
  JobsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub "${AWS::StackName}-jobs-${Stage}"
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: job_id
          AttributeType: S
      KeySchema:
        - AttributeName: job_id
          KeyType: HASH
      TimeToLiveSpecification:
        AttributeName: ttl
        Enabled: true
      PointInTimeRecoverySpecification:
        PointInTimeRecoveryEnabled: true

  # DynamoDB Table for Evaluation History
  HistoryTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub "${AWS::StackName}-history-${Stage}"
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: evaluation_id
          AttributeType: S
      KeySchema:
        - AttributeName: evaluation_id
          KeyType: HASH
      TimeToLiveSpecification:
        AttributeName: ttl
        Enabled: true
      PointInTimeRecoverySpecification:
        PointInTimeRecoveryEnabled: true

  # Dependencies Layer
  DependenciesLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: !Sub "${AWS::StackName}-dependencies-${Stage}"
      Description: Dependencies for LLM Response Evaluator
      ContentUri: ./dependencies/
      CompatibleRuntimes:
        - python3.12
    Metadata:
      BuildMethod: python3.12
      BuildArchitecture: x86_64

  # CloudWatch Alarm for Dead Letter Queue
  DLQAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub "${AWS::StackName}-dlq-not-empty-${Stage}"
      AlarmDescription: Alarm when messages appear in the dead letter queue
      Namespace: AWS/SQS
      MetricName: ApproximateNumberOfMessagesVisible
      Dimensions:
        - Name: QueueName
          Value: !GetAtt DeadLetterQueue.QueueName
      Statistic: Sum
      Period: 60
      EvaluationPeriods: 1
      Threshold: 0
      ComparisonOperator: GreaterThan
      TreatMissingData: notBreaching

Outputs:
  ApiEndpoint:
    Description: API Gateway endpoint URL
    Value: !Sub "https://${ApiGateway}.execute-api.${AWS::Region}.amazonaws.com/${Stage}"
  
  ApiFunction:
    Description: API Lambda ARN
    Value: !GetAtt ApiFunction.Arn
  
  ProcessorFunction:
    Description: Processor Lambda ARN
    Value: !GetAtt ProcessorFunction.Arn
  
  EvaluationQueue:
    Description: SQS Queue URL for evaluation jobs
    Value: !Ref EvaluationQueue
  
  JobsTable:
    Description: DynamoDB table for job tracking
    Value: !Ref JobsTable
  
  HistoryTable:
    Description: DynamoDB table for evaluation history
    Value: !Ref HistoryTable